#!/usr/bin/env bash
#VERSION 0.0.2
#/ Usage: note [FLAG] [ARGUMENT+]
#/
#/ This is a base bash script with as many niceties included as possible.
#/ In FZF, press `CTRL-N` to create a new note.
#/
#/ Flags:
#/   -n|--new      Create a new note, the title is a sanitized version of the args.
#/   -h|--help     Show this help
#/   -v|--version  Show the version

set -e

show_help() {
	export COMMAND TITLE
	grep ^#/ <"${0}" |cut -c4- | envsubst
}

show_version(){ grep ^#VERSION <"${0}" | cut -d' ' -f2; }

ROOT="${DOTFILE_FOLDER}/private/notes"
TITLE="$(date +%F)"
NEW=0

while [ "${#}" -gt 0 ]; do
	case "${1}" in
		-h|--help) show_help && exit 0 ;;
		-n|--new) NEW=1 ;;
		-v|--version) show_version && exit 0 ;;
		-*)
			echo "Unknown flag '${1}'"
			show_help
			exit 1
			;;

		# Break on non-flags
		*)  break ;;
	esac
	shift 1
done

ARGS="${*}"

if [ "${NEW}" -eq "1" ]; then
	title="$(echo "${ARGS}" | sed 's/[^[:alnum:]]/_/g')"
	"${EDITOR}" "${ROOT}/${title}.md"
	exit $?
fi

cd "${ROOT}"

RG_COMMAND="rg --line-number --smart-case '\w' ."
fzf \
	--query "${ARGS}" \
	--bind "start:reload:${RG_COMMAND} {q}" \
	--print0 \
	--delimiter ":" \
	--preview "cat {1}" \
	--preview-window "up,+{2}-/2" \
	--bind "ctrl-n:become(note -n {q})" \
	--bind "enter:become(${EDITOR} {1} +{2})"
